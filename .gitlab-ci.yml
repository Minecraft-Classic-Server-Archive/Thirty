stages:
  - build
  - deploy

build:
  stage: build
  image: debian:latest
  before_script:
    - export DEBIAN_FRONTEND=noninteractive && export TZ=Etc/UTC && apt-get update && apt-get -y dist-upgrade && apt-get -y install build-essential meson ninja-build zlib1g-dev
  script:
    - meson setup build
    - cd build && ninja

build alpine:
  stage: build
  image: alpine:latest
  before_script:
    - apk add --update alpine-sdk zlib-dev samurai meson
  script:
    - meson setup build
    - cd build && ninja

## Docker image

.kaniko: &kaniko
  stage: deploy
  image:
    name: gcr.io/kaniko-project/executor:v1.22.0-debug
    entrypoint: [""]
  before_script:
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},\"$(echo -n $CI_DEPENDENCY_PROXY_SERVER | awk -F[:] '{print $1}')\":{\"auth\":\"$(printf "%s:%s" ${CI_DEPENDENCY_PROXY_USER} "${CI_DEPENDENCY_PROXY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json

docker:
  <<: *kaniko
  script:
    - /kaniko/executor --context "${CI_PROJECT_DIR}" --dockerfile "Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:dev"
  rules:
    - if: $CI_COMMIT_TAG
      when: never 
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

docker tagged:
  <<: *kaniko
  script:
    - /kaniko/executor --context "${CI_PROJECT_DIR}" --dockerfile "Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
      --destination "${CI_REGISTRY_IMAGE}:latest"
  rules:
     - if: $CI_COMMIT_TAG
